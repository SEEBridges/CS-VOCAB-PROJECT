import java.util.Scanner;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.IOException;
import java.util.StringTokenizer;
/**
 * The Glossary class.
 *
 * @author (your name here)
 * @version (version or date)
 */
public class Glossary
{
    public final int WORD_COUNT = 210;
    private int numEntries;
    private Entry[] entries;
    public static void main(String[] args) throws IOException
    {
        Glossary g2 = new Glossary(15);
        g2.readFile("VocabList.txt");
        g2.toString();
    }

    /**
     * No-arg constructor for objects of class Glossary.
     */
    public Glossary()
    {
        numEntries = 0;
        entries = new Entry[WORD_COUNT];
    }

    /**
     * N-arg constructor for objects of class Glossary.
     * 
     * @param initialSize size of entry array for glossary
     */
    public Glossary(int initialSize)
    {
        numEntries = 0;
        entries = new Entry[initialSize];
    }

    /**
     * Method getNumEntries.
     *
     * @return The number of enries in glossary
     */
    public int getNumEntries()
    {
        return entries.length;
    }

    /**
     * Method getEntries.
     *
     * @return The entries in the glossary
     */
    public Entry[] getEntries()
    {
        return entries;
    }

    /**
     * Method readFile.
     *
     * @param filename name of file to read
     */
    public void readFile(String filename) throws IOException
    {
        File file = new File(filename);
        Scanner inputFile = new Scanner(file);
        while (inputFile.hasNext() == true)
        {
            String str = inputFile.nextLine();
            String[] arrOfStr = str.split(":");
            addEntry(new Entry(arrOfStr[0],arrOfStr[1]));
        }
        inputFile.close();
    }

    /**
     * Method addEntry.
     *
     * @param entry to be added
     */
    public void addEntry(Entry entry)
    {
        entries[numEntries + 1] = entry; //fix
    }

    /**
     * Method removeEntry.
     *
     * @param entry to be added
     */
    public void removeEntry(String term)
    {

    }

    /**
     * Method toString.
     *
     * @return The string representation of the glossary
     */
    public String toString()
    {
        for (int i = 0; i < entries.length; i++)
        {
            if (entries[i] != null)
            {
                String str = entries[i] + "" + entries[i + 1];
                return str;
            }
        }
        return "";
    }
}
