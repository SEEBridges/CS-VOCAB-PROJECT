* Write a description of class GamePlay here.
 *
 * @author (Carter Bridges, Austin Singer)
 * @version (11/28/22)
 */
import java.util.*;
import java.io.FileNotFoundException;

public class GamePlay
{
    public final int TEMP_LIST_COUNT = 4;
    private Glossary glossary;
    private Random generator;
    private Scanner keyboard;
    private int correct;
    private int incorrect;

    /**
     * No-arg GamePlay Constructor.
     *
     */
    public GamePlay() throws java.io.IOException,FileNotFoundException
    {
        glossary = new Glossary();
        glossary.readFile("VocabList.txt");
        generator = new Random();
        keyboard = new Scanner(System.in);
        correct = 0;
        incorrect = 0;

    }

    /**
     * Two-arg GamePlay Constructor.
     *
     * @param filename filename of terms and definitions to read
     * @param selection menu option of user for game choice
     */
    public GamePlay(String fileName) throws java.io.IOException
    {
        glossary = new Glossary();
        glossary.readFile(fileName);
        generator = new Random();
        keyboard = new Scanner(System.in);
        correct = 0;
        incorrect = 0;

    }

    /**
     * Method makeSelection.
     *
     * @param selection menu choice of user
     */
    public void makeSelection(int selection)
    {
        switch(selection)
        {
            case 1:
                System.out.print(glossary.toString());
                break;
            case 2:
                playLimitedGame(5);
                printResults();
                break;
            case 3:
                playLimitedGame(20);
                printResults();
                break;
            case 4:
                playContinuousGame();
                printResults();
                break;
            case 5:
                System.out.print("see ya next time! \n");
                break;
            default:
                System.out.print("\n");
                break;
        }
    }

    /**
     * Method playRound.
     *
     */
    public void playRound()
    {
        Entry[] entries = new Entry[TEMP_LIST_COUNT];
        int rightIndex = generator.nextInt(glossary.getNumEntries());
        Entry rightTerm = glossary.getEntries()[rightIndex];
        int index = generator.nextInt(TEMP_LIST_COUNT);
        entries[index] = rightTerm;

        displayRound(entries, index);
        if (keyboard.nextInt() -1 == index)
        {
            correct++;
        }
        else 
        {
            incorrect++;
        }
    }

    /**
     * Method playLimitedGame.
     *
     * @param rounds number of rounds to play
     */
    public void playLimitedGame(int rounds)
    {
        //use a a loop to play number of rounds specified by parameter
        playRound();

    }

    /**
     * Method playContinuousGame.
     *
     */
    public void playContinuousGame()
    {
        System.out.println("Would you like top play another round (enter 0 to continue or -1 to quit)?/t");

        while(keyboard.nextInt() != -1)
        {
            playRound();
        }

    }

    /**
     * Method displayRound.
     *
     * @param entries entries to build question
     * @param index index of the term to find the correct definition
     */
    public void displayRound(Entry[] entries, int index)
    {
        System.out.println("Select the correctdefinition "
            + "for the following  term: " + entries[index].getTerm());

    }

    /**
     * Method printResults.
     *
     */
    public void printResults()
    {

    }
    
    public Glossary getGlossary()
{
        return glossary;
} 

public static void main(String[] args) throws FileNotFoundException
{
        GamePlay gamePlay = new GamePlay("VocabList.txt");
        System.out.println(gamePlay.getGlossary().toString());
        System.out.println();
        System.out.println();
        gamePlay.getGlossary().removeEntry("API");
        System.out.println(gamePlay.getGlossary().toString());
}
}



